top_level ::= source_file

end_of_line ::= !\n!
identifier  ::= !\l\w*!
integer     ::= !\d+!
string      ::= !\x22[^\x22]*\x22!
delimiter   ::= delimiters ".:$#()+-@=,!"
comment     ::= !;[.]*!

format '(' space_before no_space_after
format ')' no_space_before space_after
format '+' no_space_before space_after
format '-' space_before no_space_after
format ',' no_space_before space_after
format '#' space_before no_space_after
format '@' space_before no_space_after
format '=' space_before space_after
format ':' no_space_before new_line_after
format '$' space_before no_space_after
format '.' space_before no_space_after

format integer no_space_after
format source_element new_line_after

source_file ::= { source_element end_of_line }

source_element ::= [ label ':' ] [ instruction ]

label ::= identifier | integer

instruction ::= pseudo_op | op

pseudo_op ::= directive | declaration

directive ::= '.' identifier { operand }

op ::= no_operand
     | single_operand
     | double_operand
     | branch
     | jump
     | trap
     | property

no_operand ::= 'halt' | 'nop' | 'rts'
single_operand ::= single_operand_instruction [size] arg
double_operand ::= double_operand_instruction [size] arg ',' arg
property ::= property_instruction operand [ integer ]
property_instruction ::= 'get_property' | 'set_property'

branch ::= branch_instruction branch_destination
branch_destination ::= identifier | temporary_label

jump ::= jump_instruction jump_destination
jump_destination ::= identifier | temporary_label

temporary_label ::= label_direction integer
label_direction ::= '+' | '-'

trap ::= 'trap' trap_operand

trap_operand ::= identifier | integer

size ::= '.' integer

single_operand_instruction ::=
                  'clr' | 'not'
                 | 'inc' | 'dec' | 'neg'
                 | 'adc' | 'sbc' | 'tst'

double_operand_instruction ::=
     'mov' | 'cmp' | 'add' | 'sub' | 'mul' | 'div' | 'mod' | 'and' | 'or' | 'xor'

branch_instruction ::= 
          'br' | 'bne' | 'beq' | 'bge' | 'blt' | 'bgt' | 'ble'
         | 'bpl' | 'bmi' | 'bhi' | 'blos' 
         | 'bvc' | 'bvs' | 'bcc' | 'bcs'
         | 'bhis' | 'blo'

jump_instruction ::= 'jmp' | 'jsr'

arg ::= identifier | deferred
      | autoincrement | autoincrement_deferred
      | autodecrement | autodecrement_deferred
      | indexed | indexed_deferred
      | immediate | absolute
      | string
      
deferred ::= '(' identifier ')'
autoincrement ::= '(' identifier ')' '+'
autoincrement_deferred ::= '@' '(' identifier ')' '+'
autodecrement ::= '-' '(' identifier ')'
autodecrement_deferred ::= '@' '-' '(' identifier ')'
indexed ::= operand '(' identifier ')'
indexed_deferred ::= '@' operand '(' identifier ')'
immediate ::= '#' expression
absolute ::= '@' '#' expression

expression ::= < operand / operator >

operand ::= identifier | integer | string | negative_integer

negative_integer ::= '-' integer

operator ::= '+' | '-'

declaration ::= identifier '=' expression
