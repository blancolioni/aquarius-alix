class Ada.Checks.Defining_Qualified_Reference inherit
   Aquarius.Trees.Program_Tree
   Aqua.Text_IO
   
feature

   Context     : detachable Komnenos.Entity
   New_Context : detachable Komnenos.Entity
   
   Reference   : Aqua.Containers.Linked_List[Ada.Entity_Reference]
   Identifiers : String_List
   
   After_Identifier (Child : Ada.Checks.Identifier)
      local
         Ref : Ada.Entity_Reference
         Id  : String
      do
         Context := New_Context
         Id := Child.Text
         
         if attached Context then
            New_Context := Find_Entity (Id, "")
         else
            if Identifiers.Is_Empty then
               New_Context := Find_Entity (Id, "")
            else
               Error ("undefined: " & Identifiers.Last_Element)
            end
         end
         if attached New_Context then
            create Ref
            Ref.Make (Id, New_Context, Child)
            Reference.Append (Ref)
         end
         Identifiers.Append (Id)
      end
end
