deferred class Petal.Entry
inherit
   Aqua.Text_IO
   
create
   Create_Constant_Entry, Create_Value_Entry, Create_Type_Entry, Create_Object_Entry
   
feature

   Name          : String
   Declared_Name : String
   Parent        : detachable Petal.Entry
   Type          : detachable Petal.Type
   Is_Constant   : Boolean
   Is_Type       : Boolean
   Is_Value      : Boolean
   Has_Table     : Boolean
   Table         : Petal.Entry_Table
   Initialiser   : detachable Aquarius.Trees.Program_Tree
   Value         : detachable Petal.Value
   
   Create_Entry (Entry_Name    : String
                 Entry_Parent  : detachable Petal.Entry
                 Entry_Type    : detachable Petal.Type)
   do
      Name := Entry_Name.To_Lower
      Declared_Name := Entry_Name
      Parent := Entry_Parent
      Type := Entry_Type
   end

   Create_Constant_Entry (Entry_Name        : String
                          Entry_Initialiser : Aquarius.Trees.Program_Tree
                          Entry_Parent      : detachable Petal.Entry
                          Entry_Type        : detachable Petal.Type)
   do
      Create_Entry (Entry_Name, Entry_Parent, Entry_Type)
      Is_Constant := True
      Initialiser := Entry_Initialiser
   end
   
   Create_Value_Entry (Entry_Name        : String
                       Entry_Value       : Petal.Value
                       Entry_Type        : detachable Petal.Type)
   do
      Create_Entry (Entry_Name, Void, Entry_Type)
      Is_Value := True
      Value := Entry_Value
   end
   
   Create_Type_Entry (Entry_Name    : String
                      Entry_Type    : Petal.Type
                      Entry_Parent  : detachable Petal.Entry)
   do
      Create_Entry (Entry_Name, Entry_Parent, Entry_Type)
      Is_Type := True
   end
   
   Create_Object_Entry (Entry_Name        : String
                        Entry_Type        : detachable Petal.Type
                        Entry_Initialiser : Aquarius.Trees.Program_Tree)
   do
      Create_Entry (Entry_Name, Void, Entry_Type)
      Initialiser := Entry_Initialiser
   end
   
   Set_Table (To : Petal.Entry_Table)
   require
      Not_Already_Set: not Has_Table
   do
      Table := To
      Has_Table := True
   ensure
      Table_Was_Set: Has_Table
      Table_Was_Allocated: Table /= Void
   end
      
   Qualified_Name : String
   do
      if attached Parent as P then
         Result := P.Qualified_Name & "." & Declared_Name
      else
         Result := Declared_Name
      end
   end
   
   Base_File_Name : String
   do
      if attached Parent as P then
         Result := P.Base_File_Name & "-" & Name
      else
         Result := Name
      end
   end
   
   Generate_Kernel_Type
   do
      Put_Line ("   -- TODO: generate kernel type for " & Declared_Name)
   end
   
end
