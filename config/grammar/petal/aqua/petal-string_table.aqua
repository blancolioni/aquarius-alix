class Petal.String_Table
inherit
   Aqua.Text_IO
   
feature
   
   Insert (S : Petal.Value) : String
      do
         Next_Index := Next_Index + 1
         Result := "S" & Next_Index.To_String
         New_Entry (S, Result) 
      end
         
   Declare_Strings
      do
         across Table as Entry loop
            Set_Col (4)
            Put (Entry.Label)
            Set_Col (8)
            Put (": constant String := ")
            Put (Entry.Value.To_String)
            Put (";")
            New_Line
         end
      end
      
feature {None}

   New_Entry (S : Petal.Value; Label : String)
      local
         E : Petal.String_Entry
      do
         create E.Make (S, Label)
         Table.Append (E)
      end
      
   Next_Index : Integer
   Table      : Aqua.Containers.Linked_List[Petal.String_Entry]
   
end
