class Petal.String_Table
inherit
   Aqua.Text_IO
   
feature
   
   Insert (S : Petal.Value)
      local
         Label : String
      do
         Next_Index := Next_Index + 1
         Label := "S" & Next_Index.To_String
         New_Entry (Label, S) 
         S.Set_Label (Label)
      end
         
   Declare_Strings
--      local
--         Index : Integer
--         Key   : String       
      do
--         from
--            Index := 1
--         invariant
--            Index <= Next_Index
--         until
--            Index > Next_Index
--         loop
--            Key := "S" & Index.To_String
--            Set_Col (4)
--            Put (Key)
--            Set_Col (8)
--            Put (": aliased constant String :=")
--            New_Line
--            Set_Col (12)
--            Put (Table.Element (Key).To_String)
--            Put (";")
--            New_Line
--            Index := Index + 1
--         end
      end
      
feature {None}

   Table       : Aqua.Containers.Linked_List [Petal.Value]
   Next_Index  : Integer
   
   New_Entry (Label : String; S : Petal.Value)
      do
         Table.Append (S)
      end
      
end
